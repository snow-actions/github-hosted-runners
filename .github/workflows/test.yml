name: Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  runners:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      list: ${{ steps.list.outputs.all }}
    steps:
      - uses: actions/checkout@v4
      - id: list
        uses: ./

  test:
    needs: [ runners ]
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ fromJSON(needs.runners.outputs.list) }}
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - id: list
        uses: ./
      - run: echo "${json}"
        env:
          json: ${{ toJSON(steps.list.outputs) }}

      - name: All list length > 0
        run: test $(echo ${list} | jq 'length') -gt 0
        env:
          list: ${{ steps.list.outputs.all }}
        shell: bash
      - name: All list doesn't contain latest
        run: test $(echo ${list} | jq 'map(select(endswith("-latest"))) | length') -eq 0
        env:
          list: ${{ steps.list.outputs.all }}
        shell: bash
      - name: Latest list length == 3
        run: test $(echo ${list} | jq 'length') -eq 3
        env:
          list: ${{ steps.list.outputs.latest }}
        shell: bash
      - name: Ubuntu list length > 0
        run: test $(echo ${list} | jq 'length') -gt 0
        env:
          list: ${{ steps.list.outputs.ubuntu }}
        shell: bash
      - name: Ubuntu list doesn't contain latest
        run: test $(echo ${list} | jq 'map(select(endswith("-latest"))) | length') -eq 0
        env:
          list: ${{ steps.list.outputs.ubuntu }}
        shell: bash
      - name: Windows list length > 0
        run: test $(echo ${list} | jq 'length') -gt 0
        env:
          list: ${{ steps.list.outputs.windows }}
        shell: bash
      - name: Windows list doesn't contain latest
        run: test $(echo ${list} | jq 'map(select(endswith("-latest"))) | length') -eq 0
        env:
          list: ${{ steps.list.outputs.windows }}
        shell: bash
      - name: macOS list length > 0
        run: test $(echo ${list} | jq 'length') -gt 0
        env:
          list: ${{ steps.list.outputs.macos }}
        shell: bash
      - name: macOS list doesn't contain latest
        run: test $(echo ${list} | jq 'map(select(endswith("-latest"))) | length') -eq 0
        env:
          list: ${{ steps.list.outputs.macos }}
        shell: bash

  test-passing:
    needs: [ test ]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - run: echo "All tests have passed."
